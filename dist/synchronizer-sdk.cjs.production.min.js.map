{"version":3,"file":"synchronizer-sdk.cjs.production.min.js","sources":["../src/constants/chains.ts","../src/constants/addresses.ts","../node_modules/regenerator-runtime/runtime.js","../src/constants/oracle.ts","../src/muon/error.ts","../src/types/index.ts","../src/muon/client.ts","../src/utils/prices.ts","../src/state/application/reducer.ts","../src/state/conducted/reducer.ts","../src/utils/http.ts","../src/state/details/reducer.ts","../src/state/fees/reducer.ts","../src/state/quotes/reducer.ts","../src/state/signatures/reducer.ts","../src/state/store.ts","../src/state/fees/hooks.ts","../src/hooks/useRegistrars.tsx","../src/state/quotes/hooks.ts","../src/state/application/actions.ts","../src/state/conducted/updater.ts","../src/state/details/updater.ts","../src/constants/providers.ts","../src/hooks/index.tsx","../src/state/fees/updater.ts","../src/state/quotes/updater.ts","../src/state/signatures/updater.ts","../src/state/updaters.tsx","../src/index.tsx","../src/provider.tsx","../src/hooks/useApplication.tsx"],"sourcesContent":["export enum SupportedChainId {\r\n  FANTOM = 250,\r\n}\r\n\r\nexport const SynchronizerChains = [SupportedChainId.FANTOM]\r\n","import { SupportedChainId } from './chains'\r\nimport { AddressMap } from '../types'\r\n\r\nexport const Collateral: AddressMap = {\r\n  [SupportedChainId.FANTOM]: '0xDE12c7959E1a72bbe8a5f7A1dc8f8EeF9Ab011B3',\r\n}\r\n\r\nexport const Synchronizer: AddressMap = {\r\n  [SupportedChainId.FANTOM]: '0x71EB0bCFeB9610a79af007531aEeeE7848e76E71',\r\n}\r\n\r\nexport const PartnerManager: AddressMap = {\r\n  [SupportedChainId.FANTOM]: '0x6796a6b39f2c8FF2bEfa223aC6eeD13a4d693ba4',\r\n}\r\n\r\nexport const Conductor: AddressMap = {\r\n  [SupportedChainId.FANTOM]: '0x570d710d9f20599551246ec24d8a8ccffeb57ccf',\r\n}\r\n\r\nexport const RoleChecker: AddressMap = {\r\n  [SupportedChainId.FANTOM]: '0x8e6f8844b73dae005b02fd8776ee4719e7d5eb01',\r\n}\r\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import { SupportedChainId } from './chains'\r\n\r\nexport const INFO_BASE_URL = new URL('https://oracle1.deus.finance')\r\n\r\nexport const ORACLE_NETWORK_NAMES: { [chainId: number]: string } = {\r\n  [SupportedChainId.FANTOM]: 'fantom',\r\n}\r\n\r\nexport const MUON_BASE_URL = 'https://node-balancer.muon.net/v1'\r\n\r\n// https://github.com/muon-protocol/muon-node-js/blob/7fb51305f7a4315bf3a4e3d2e258ba37bb4111e3/utils/node-utils/eth.js\r\nexport const MUON_NETWORK_NAMES: { [chainId: number]: string } = {\r\n  [SupportedChainId.FANTOM]: 'fantom',\r\n}\r\n","type Result<T> = T | Error\r\nexport type Type<T> = Result<T>\r\n\r\nexport function getErrorMessage(error: unknown) {\r\n  if (error instanceof Error) return error.message\r\n  return String(error)\r\n}\r\n\r\nexport function isError<T>(result: Result<T>): result is Error {\r\n  return result instanceof Error\r\n}\r\n\r\nexport function isSuccess<T>(result: Result<T>): result is T {\r\n  return !isError(result)\r\n}\r\n","import { Percent, Token } from '@sushiswap/core-sdk'\r\nimport { SupportedChainId } from '../constants/chains'\r\n\r\nexport interface AddressMap {\r\n  [x: string]: string\r\n}\r\n\r\nexport interface TokenMap {\r\n  [contract: string]: Token\r\n}\r\n\r\n/**\r\n * @param id Identifier according to the oracle\r\n * @param long contractAddress of LONG version\r\n * @param short contractAddress of SHORT version\r\n */\r\nexport interface RegistrarPair {\r\n  id: string\r\n  long: Registrar\r\n  short: Registrar\r\n}\r\n\r\n/**\r\n * @param id Identifier according to the oracle\r\n * @param ticker official ticker, usually same as id\r\n * @param symbol symbol as per the direction (long or short)\r\n * @param name contract name as per mint constructor\r\n * @param sector crypto or stock\r\n * @param direction direction (long or short)\r\n * @param contract the contract address\r\n * @param sibling contract address of the asset in opposite direction\r\n * @param price latest quote provided by the oracle\r\n * @param fee latest fee provided by the oracle\r\n * @param open if asset is tradeable\r\n */\r\nexport interface Registrar {\r\n  id: string\r\n  chainId: SupportedChainId\r\n  ticker: string\r\n  symbol: string\r\n  name: string\r\n  sector: Sector\r\n  direction: Direction\r\n  contract: string\r\n  sibling: string\r\n  price: string\r\n  fee: Percent\r\n  open: boolean\r\n  token: Token\r\n}\r\n\r\nexport enum Direction {\r\n  LONG = 'LONG',\r\n  SHORT = 'SHORT',\r\n}\r\n\r\nexport enum Sector {\r\n  STOCKS = 'STOCKS',\r\n  CRYPTO = 'CRYPTO',\r\n  FOREX = 'FOREX',\r\n  COMMODITIES = 'COMMODITIES',\r\n  MISC = 'MISC',\r\n}\r\n","import axios, { AxiosInstance } from 'axios'\r\nimport { getAddress } from '@ethersproject/address'\r\n\r\nimport { MuonResponse, RequestParams, SignaturesData, IError } from './types'\r\nimport { MUON_NETWORK_NAMES, MUON_BASE_URL } from '../constants/oracle'\r\nimport { SupportedChainId, SynchronizerChains } from '../constants/chains'\r\nimport { Type, isError, getErrorMessage } from './error'\r\n\r\nexport class MuonClient {\r\n  private _api: AxiosInstance\r\n  private _APP_ID = 'synchronizer'\r\n  private _APP_METHOD = 'signature'\r\n  public nSign: number\r\n\r\n  constructor(baseURL?: string, nSign?: number) {\r\n    this._api = axios.create({\r\n      baseURL: baseURL ?? MUON_BASE_URL,\r\n      timeout: 20000,\r\n    })\r\n    this.nSign = nSign ?? 2\r\n  }\r\n\r\n  private _getChecksumAddress(contract: string) {\r\n    try {\r\n      return getAddress(contract)\r\n    } catch (err) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  private _getRequestParams(contract: string, action: string, chainId: SupportedChainId): Type<RequestParams> {\r\n    if (!contract) return new Error('Param `contract` is missing.')\r\n    if (!action) return new Error('Param `action` is missing.')\r\n    if (!chainId) return new Error('Param `chainId` is missing.')\r\n\r\n    const tokenId = this._getChecksumAddress(contract)\r\n    if (!tokenId) return new Error('Param `contract` is not a valid address.')\r\n    if (action !== 'buy' && action !== 'sell') {\r\n      return new Error('Param `action` is not supported. Try using buy or sell.')\r\n    }\r\n    if (!SynchronizerChains.includes(chainId)) return new Error('Param `chainId` is not supported.')\r\n\r\n    return {\r\n      tokenId,\r\n      action,\r\n      chain: MUON_NETWORK_NAMES[chainId],\r\n      useMultiplier: false,\r\n    }\r\n  }\r\n\r\n  private async _makeRequest(requestParams: RequestParams): Promise<Type<MuonResponse>> {\r\n    const response = await this._api({\r\n      method: 'post',\r\n      url: '/',\r\n      data: {\r\n        app: this._APP_ID,\r\n        method: this._APP_METHOD,\r\n        nSign: this.nSign,\r\n        params: requestParams,\r\n      },\r\n    })\r\n    if (response.status !== 200) {\r\n      return new Error('Unable to reach the Muon Network.')\r\n    }\r\n    return response.data\r\n  }\r\n\r\n  public async getSignatures(\r\n    contract: string,\r\n    action: string,\r\n    chainId: SupportedChainId\r\n  ): Promise<SignaturesData | IError> {\r\n    try {\r\n      const requestParams = this._getRequestParams(contract, action, chainId)\r\n      if (isError(requestParams)) throw new Error(requestParams.message)\r\n      console.info('Requesting data from Muon: ', requestParams)\r\n\r\n      const response = await this._makeRequest(requestParams)\r\n      if (isError(response)) throw new Error(response.message)\r\n      console.info('Response from Muon: ', response)\r\n\r\n      if ('error' in response) {\r\n        throw new Error(response.error)\r\n      } else if (!response.success || !response.result.confirmed) {\r\n        throw new Error('An unknown Muon error has occured')\r\n      }\r\n\r\n      const result = response.result\r\n\r\n      const reqId = `0x${result?.cid?.substring(1)}`\r\n      const signature = result?.signatures[0]?.signature\r\n      const owner = result?.signatures[0]?.owner\r\n      const nonce = result?.data?.init?.nonceAddress\r\n      const sigs = [\r\n        {\r\n          signature,\r\n          owner,\r\n          nonce,\r\n        },\r\n      ]\r\n\r\n      return {\r\n        success: true,\r\n        data: {\r\n          response,\r\n          calldata: {\r\n            price: result.data.result.price,\r\n            expireBlock: result.data.result.expireBlock,\r\n            reqId,\r\n            sigs,\r\n          },\r\n        },\r\n      }\r\n    } catch (err) {\r\n      console.error(err)\r\n      return {\r\n        success: false,\r\n        error: getErrorMessage(err),\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Percent, JSBI } from '@sushiswap/core-sdk'\r\n\r\nexport const PERCENT_DENOMINATOR = 100\r\nexport const PERCENT_SCALE = 10000\r\nexport const ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(PERCENT_SCALE), JSBI.BigInt(PERCENT_SCALE))\r\n\r\nexport function constructPercentage(value: number) {\r\n  const percent = ~~(value * PERCENT_SCALE) // bitwise remove decimals\r\n  return new Percent(JSBI.BigInt(percent), PERCENT_DENOMINATOR * PERCENT_SCALE).multiply(PERCENT_DENOMINATOR)\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { AppState, useAppSelector } from '../store'\r\n\r\ninterface ApplicationState {\r\n  forceRefresh: number\r\n}\r\n\r\nconst initialState: ApplicationState = {\r\n  forceRefresh: 0,\r\n}\r\n\r\nconst applicationSlice = createSlice({\r\n  name: 'application',\r\n  initialState,\r\n  reducers: {\r\n    updateForceRefresh: (state, { payload }) => {\r\n      state.forceRefresh = payload\r\n    },\r\n  },\r\n})\r\n\r\nconst { reducer } = applicationSlice\r\nexport default reducer\r\n\r\nexport function useApplicationState(): ApplicationState {\r\n  return useAppSelector((state: AppState) => state.application)\r\n}\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\n\r\nimport { AppState, useAppSelector } from '../store'\r\nimport { INFO_BASE_URL, ORACLE_NETWORK_NAMES } from '../../constants/oracle'\r\nimport { makeHttpRequest } from '../../utils/http'\r\n\r\nexport enum ConductedStatus {\r\n  OK = 'OK',\r\n  LOADING = 'LOADING',\r\n  ERROR = 'ERROR',\r\n}\r\n\r\ninterface OracleResponse {\r\n  count: number\r\n  tokens: {\r\n    id: string\r\n    long: string\r\n    short: string\r\n  }[]\r\n}\r\n\r\nexport type Conducted = {\r\n  id: string\r\n  long: string\r\n  short: string\r\n}\r\n\r\ninterface ConductedState {\r\n  status: ConductedStatus\r\n  conducted: {\r\n    [chainId: number]: Conducted[]\r\n  }\r\n}\r\n\r\nconst initialState: ConductedState = {\r\n  status: ConductedStatus.LOADING,\r\n  conducted: {},\r\n}\r\n\r\nexport const fetchConducted = createAsyncThunk('conducted/fetchConducted', async () => {\r\n  const results = await Promise.allSettled(\r\n    Object.entries(ORACLE_NETWORK_NAMES).map(async ([chainId, networkName]) => {\r\n      const { href: url } = new URL(`/${networkName}/conducted.json`, INFO_BASE_URL)\r\n      const response: OracleResponse = await makeHttpRequest(url)\r\n      return {\r\n        chainId: Number(chainId),\r\n        result: response.tokens,\r\n      }\r\n    })\r\n  )\r\n\r\n  // Bind results to according network\r\n  return results.reduce((acc: { [chainId: number]: Conducted[] }, res) => {\r\n    if (res.status !== 'fulfilled') return acc\r\n    acc[res.value.chainId] = res.value.result\r\n    return acc\r\n  }, {})\r\n})\r\n\r\nconst conductedSlice = createSlice({\r\n  name: 'conducted',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchConducted.pending, (state) => {\r\n        state.status = ConductedStatus.LOADING\r\n      })\r\n      .addCase(fetchConducted.fulfilled, (state, { payload }) => {\r\n        state.status = ConductedStatus.OK\r\n        state.conducted = payload\r\n      })\r\n      .addCase(fetchConducted.rejected, () => {\r\n        console.log('Unable to fetch conducted')\r\n        return {\r\n          ...initialState,\r\n          status: ConductedStatus.ERROR,\r\n        }\r\n      })\r\n  },\r\n})\r\n\r\nconst { reducer } = conductedSlice\r\nexport default reducer\r\n\r\nexport function useConductedState(): ConductedState {\r\n  return useAppSelector((state: AppState) => state.conducted)\r\n}\r\n","export const makeHttpRequest = async function (\r\n  url: string,\r\n  options: {\r\n    [x: string]: string\r\n  } = {\r\n    cache: 'no-cache',\r\n  }\r\n) {\r\n  try {\r\n    const response = await fetch(url, options)\r\n    if (response.ok) {\r\n      return await response.json()\r\n    } else {\r\n      throw new Error(response.statusText)\r\n    }\r\n  } catch (err) {\r\n    console.error(`Error fetching ${url}: `, err)\r\n    return null\r\n  }\r\n}\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\n\r\nimport { AppState, useAppSelector } from '../store'\r\nimport { INFO_BASE_URL } from '../../constants/oracle'\r\nimport { makeHttpRequest } from '../../utils/http'\r\nimport { Sector } from '../../types'\r\n\r\nexport enum DetailsStatus {\r\n  OK = 'OK',\r\n  LOADING = 'LOADING',\r\n  ERROR = 'ERROR',\r\n}\r\n\r\ninterface DetailsState {\r\n  status: DetailsStatus\r\n  details: {\r\n    [symbol: string]: {\r\n      name: string\r\n      sector: Sector\r\n      symbol: string\r\n      shortSymbol: string\r\n      longSymbol: string\r\n    }\r\n  }\r\n}\r\n\r\nconst initialState: DetailsState = {\r\n  status: DetailsStatus.LOADING,\r\n  details: {},\r\n}\r\n\r\nexport const fetchDetails = createAsyncThunk('details/fetchDetails', async () => {\r\n  const { href: url } = new URL(`/registrar-detail.json`, INFO_BASE_URL)\r\n  const response: {\r\n    [symbol: string]: {\r\n      name: string\r\n      sector: string\r\n      symbol: string\r\n      short_symbol: string\r\n      long_symbol: string\r\n    }\r\n  } = await makeHttpRequest(url)\r\n  return Object.entries(response).reduce((acc: DetailsState['details'], [symbol, data]) => {\r\n    acc[symbol] = {\r\n      name: data.name,\r\n      sector: data.sector === 'stock' ? Sector.STOCKS : data.sector === 'crypto' ? Sector.CRYPTO : Sector.FOREX,\r\n      symbol: data.symbol,\r\n      shortSymbol: data.short_symbol,\r\n      longSymbol: data.long_symbol,\r\n    }\r\n    return acc\r\n  }, {})\r\n})\r\n\r\nconst detailsSlice = createSlice({\r\n  name: 'details',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchDetails.pending, (state) => {\r\n        state.status = DetailsStatus.LOADING\r\n      })\r\n      .addCase(fetchDetails.fulfilled, (state, { payload }) => {\r\n        state.status = DetailsStatus.OK\r\n        state.details = payload\r\n      })\r\n      .addCase(fetchDetails.rejected, () => {\r\n        console.log('Unable to fetch details')\r\n        return {\r\n          ...initialState,\r\n          status: DetailsStatus.ERROR,\r\n        }\r\n      })\r\n  },\r\n})\r\n\r\nconst { reducer } = detailsSlice\r\nexport default reducer\r\n\r\nexport function useDetailsState(): DetailsState {\r\n  return useAppSelector((state: AppState) => state.details)\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { Sector } from '../../types'\r\n\r\nexport enum FeesStatus {\r\n  OK = 'OK',\r\n  LOADING = 'LOADING',\r\n  ERROR = 'ERROR',\r\n}\r\n\r\ntype Fee = {\r\n  [Sector.STOCKS]: string\r\n  [Sector.CRYPTO]: string\r\n  [Sector.FOREX]: string\r\n  [Sector.COMMODITIES]: string\r\n  [Sector.MISC]: string\r\n}\r\n\r\nexport interface FeesState {\r\n  status: FeesStatus\r\n  platformFee: Fee\r\n  partnerFee: Fee\r\n}\r\n\r\nconst initialState: FeesState = {\r\n  status: FeesStatus.LOADING,\r\n  partnerFee: {\r\n    [Sector.STOCKS]: '0',\r\n    [Sector.CRYPTO]: '0',\r\n    [Sector.FOREX]: '0',\r\n    [Sector.COMMODITIES]: '0',\r\n    [Sector.MISC]: '0',\r\n  },\r\n  platformFee: {\r\n    [Sector.STOCKS]: '0',\r\n    [Sector.CRYPTO]: '0',\r\n    [Sector.FOREX]: '0',\r\n    [Sector.COMMODITIES]: '0',\r\n    [Sector.MISC]: '0',\r\n  },\r\n}\r\n\r\nconst feesSlice = createSlice({\r\n  name: 'fees',\r\n  initialState,\r\n  reducers: {\r\n    updatePlatformFee: (state, { payload }) => {\r\n      state.platformFee = {\r\n        ...state.platformFee,\r\n        ...payload,\r\n      }\r\n    },\r\n    updatePartnerFee: (state, { payload }) => {\r\n      state.partnerFee = {\r\n        ...state.partnerFee,\r\n        ...payload,\r\n      }\r\n    },\r\n  },\r\n})\r\n\r\nconst { actions, reducer } = feesSlice\r\nexport default reducer\r\n\r\nexport const { updatePlatformFee, updatePartnerFee } = actions\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\n\r\nimport { INFO_BASE_URL, ORACLE_NETWORK_NAMES } from '../../constants/oracle'\r\nimport { makeHttpRequest } from '../../utils/http'\r\n\r\nexport enum QuotesStatus {\r\n  OK = 'OK',\r\n  LOADING = 'LOADING',\r\n  ERROR = 'ERROR',\r\n}\r\n\r\ninterface OracleResponse {\r\n  [symbol: string]: {\r\n    Long?: {\r\n      price: number\r\n      fee: number\r\n      is_close?: boolean\r\n    }\r\n    Short?: {\r\n      price: number\r\n      fee: number\r\n      is_close?: boolean\r\n    }\r\n  }\r\n}\r\n\r\ntype Quote = {\r\n  price: string\r\n  open: boolean\r\n}\r\n\r\ninterface Quotes {\r\n  [symbol: string]: {\r\n    long: Quote\r\n    short: Quote\r\n  }\r\n}\r\n\r\nexport interface QuotesState {\r\n  status: QuotesStatus\r\n  quotes: {\r\n    [chainId: number]: Quotes\r\n  }\r\n}\r\n\r\nconst initialState: QuotesState = {\r\n  status: QuotesStatus.LOADING,\r\n  quotes: {},\r\n}\r\n\r\nexport const fetchQuotes = createAsyncThunk('quotes/fetchQuotes', async () => {\r\n  const results = await Promise.allSettled(\r\n    Object.entries(ORACLE_NETWORK_NAMES).map(async ([chainId, networkName]) => {\r\n      const { href: url } = new URL(`/${networkName}/price.json`, INFO_BASE_URL)\r\n      const response: OracleResponse = await makeHttpRequest(url)\r\n\r\n      // Modify response\r\n      const result = Object.entries(response).reduce((acc: Quotes, [symbol, values]) => {\r\n        const longPrice = values.Long?.price ?? 0\r\n        const shortPrice = values.Short?.price ?? 0\r\n\r\n        acc[symbol] = {\r\n          long: {\r\n            price: longPrice.toFixed(6),\r\n            open: !!longPrice,\r\n          },\r\n          short: {\r\n            price: shortPrice.toFixed(6),\r\n            open: !!shortPrice,\r\n          },\r\n        }\r\n        return acc\r\n      }, {})\r\n      return {\r\n        chainId: Number(chainId),\r\n        result,\r\n      }\r\n    })\r\n  )\r\n\r\n  // Bind results to according network\r\n  return results.reduce((acc: { [chainId: number]: Quotes }, res) => {\r\n    if (res.status !== 'fulfilled') return acc\r\n    acc[res.value.chainId] = res.value.result\r\n    return acc\r\n  }, {})\r\n})\r\n\r\nconst quotesSlice = createSlice({\r\n  name: 'quotes',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchQuotes.pending, (state) => {\r\n        state.status = QuotesStatus.LOADING\r\n      })\r\n      .addCase(fetchQuotes.fulfilled, (state, { payload }) => {\r\n        state.status = QuotesStatus.OK\r\n        state.quotes = payload\r\n      })\r\n      .addCase(fetchQuotes.rejected, () => {\r\n        console.log('Unable to fetch quotes')\r\n        return {\r\n          ...initialState,\r\n          status: QuotesStatus.ERROR,\r\n        }\r\n      })\r\n  },\r\n})\r\n\r\nconst { reducer } = quotesSlice\r\nexport default reducer\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\n\r\nimport { AppState, useAppSelector } from '../store'\r\nimport { INFO_BASE_URL, ORACLE_NETWORK_NAMES } from '../../constants/oracle'\r\nimport { makeHttpRequest } from '../../utils/http'\r\n\r\nexport enum SignaturesStatus {\r\n  OK = 'OK',\r\n  LOADING = 'LOADING',\r\n  ERROR = 'ERROR',\r\n}\r\n\r\nexport interface Signature {\r\n  multiplier: number\r\n  signs: {\r\n    sell: {\r\n      v: number\r\n      r: string\r\n      s: string\r\n    }\r\n    buy: {\r\n      v: number\r\n      r: string\r\n      s: string\r\n    }\r\n  }\r\n  price: string\r\n  fee: number\r\n  blockNo: number\r\n  index: number\r\n}\r\n\r\nexport interface Signatures {\r\n  [contract: string]: Signature\r\n}\r\n\r\ninterface SignaturesState {\r\n  status: SignaturesStatus\r\n  signatures: {\r\n    [chainId: number]: Signatures\r\n  }\r\n}\r\n\r\nconst initialState: SignaturesState = {\r\n  status: SignaturesStatus.LOADING,\r\n  signatures: {},\r\n}\r\n\r\nexport const fetchSignatures = createAsyncThunk('signatures/fetchSignatures', async () => {\r\n  const results = await Promise.allSettled(\r\n    Object.entries(ORACLE_NETWORK_NAMES).map(async ([chainId, networkName]) => {\r\n      const { href: url } = new URL(`/${networkName}/signatures.json`, INFO_BASE_URL)\r\n      const response: Signatures = await makeHttpRequest(url)\r\n      return {\r\n        chainId: Number(chainId),\r\n        result: response,\r\n      }\r\n    })\r\n  )\r\n\r\n  // Bind results to according network\r\n  return results.reduce((acc: { [chainId: number]: Signatures }, res) => {\r\n    if (res.status !== 'fulfilled') return acc\r\n    acc[res.value.chainId] = res.value.result\r\n    return acc\r\n  }, {})\r\n})\r\n\r\nconst signaturesSlice = createSlice({\r\n  name: 'signatures',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchSignatures.pending, (state) => {\r\n        state.status = SignaturesStatus.LOADING\r\n      })\r\n      .addCase(fetchSignatures.fulfilled, (state, { payload }) => {\r\n        state.status = SignaturesStatus.OK\r\n        state.signatures = payload\r\n      })\r\n      .addCase(fetchSignatures.rejected, () => {\r\n        console.log('Unable to fetch signatures')\r\n        return {\r\n          ...initialState,\r\n          status: SignaturesStatus.ERROR,\r\n        }\r\n      })\r\n  },\r\n})\r\n\r\nconst { reducer } = signaturesSlice\r\nexport default reducer\r\n\r\nexport function useSignaturesState(): SignaturesState {\r\n  return useAppSelector((state: AppState) => state.signatures)\r\n}\r\n","import { Action, AnyAction, configureStore, ThunkAction, ThunkDispatch } from '@reduxjs/toolkit'\r\nimport { setupListeners } from '@reduxjs/toolkit/query/react'\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport { Reducer } from 'redux'\r\n\r\nimport application from './application/reducer'\r\nimport conducted from './conducted/reducer'\r\nimport details from './details/reducer'\r\nimport fees from './fees/reducer'\r\nimport quotes from './quotes/reducer'\r\nimport signatures from './signatures/reducer'\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    application: application as Reducer,\r\n    conducted: conducted as Reducer,\r\n    details: details as Reducer,\r\n    fees: fees as Reducer,\r\n    quotes: quotes as Reducer,\r\n    signatures: signatures as Reducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({ thunk: true }),\r\n})\r\n\r\nsetupListeners(store.dispatch)\r\n\r\nexport default store\r\n\r\nexport type AppState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppState, unknown, Action<string>>\r\nexport type AppThunkDispatch = ThunkDispatch<{}, void, AnyAction>\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<AppState> = useSelector\r\n","import { useCallback } from 'react'\r\nimport { AppState, useAppSelector } from '../store'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nimport { FeesState } from './reducer'\r\nimport { Sector } from '../../types'\r\n\r\nexport function useFeesState(): FeesState {\r\n  return useAppSelector((state: AppState) => state.fees)\r\n}\r\n\r\nexport function useTotalFeeCallback() {\r\n  const { platformFee, partnerFee } = useFeesState()\r\n  return useCallback(\r\n    (sector: Sector) => {\r\n      return new BigNumber(platformFee[sector]).plus(partnerFee[sector]).div(1e18)\r\n    },\r\n    [platformFee, partnerFee]\r\n  )\r\n}\r\n\r\nexport function usePlatformFeeCallback() {\r\n  const { platformFee } = useFeesState()\r\n  return useCallback(\r\n    (sector: Sector) => {\r\n      return new BigNumber(platformFee[sector]).div(1e18)\r\n    },\r\n    [platformFee]\r\n  )\r\n}\r\n\r\nexport function usePartnerFeeCallback() {\r\n  const { partnerFee } = useFeesState()\r\n  return useCallback(\r\n    (sector: Sector) => {\r\n      return new BigNumber(partnerFee[sector]).div(1e18)\r\n    },\r\n    [partnerFee]\r\n  )\r\n}\r\n","import { useMemo } from 'react'\r\nimport { Token } from '@sushiswap/core-sdk'\r\nimport { find } from 'lodash'\r\nimport { getAddress } from '@ethersproject/address'\r\n\r\nimport { SupportedChainId } from '../constants/chains'\r\nimport { constructPercentage } from '../utils/prices'\r\nimport { TokenMap, Registrar, RegistrarPair, Sector, Direction } from '../types'\r\n\r\nimport { useQuotesState } from '../state/quotes/hooks'\r\nimport { useConductedState } from '../state/conducted/reducer'\r\nimport { useSignaturesState } from '../state/signatures/reducer'\r\nimport { useDetailsState } from '../state/details/reducer'\r\nimport { useTotalFeeCallback } from '../state/fees/hooks'\r\n\r\nfunction sortAlphabetically(x: Registrar, y: Registrar) {\r\n  if (x.ticker < y.ticker) {\r\n    return -1\r\n  }\r\n  if (x.ticker > y.ticker) {\r\n    return 1\r\n  }\r\n  return 0\r\n}\r\n\r\n/**\r\n * A list of all conducted assets supported by DEUS, where longs/shorts are considered siblings.\r\n * @param chainId chainId supported by the Synchronizer\r\n * @returns mapping of paired Registrars\r\n */\r\nexport function useRegistrarPairs(chainId: SupportedChainId): RegistrarPair[] {\r\n  const { conducted } = useConductedState()\r\n  const { quotes } = useQuotesState()\r\n  const { signatures } = useSignaturesState()\r\n  const { details } = useDetailsState()\r\n  const getFee = useTotalFeeCallback()\r\n\r\n  const [stockFee, cryptoFee, forexFee] = useMemo(() => {\r\n    return [getFee(Sector.STOCKS).toNumber(), getFee(Sector.CRYPTO).toNumber(), getFee(Sector.FOREX).toNumber()]\r\n  }, [getFee])\r\n\r\n  return useMemo(() => {\r\n    if (!chainId || !conducted[chainId] || !quotes[chainId] || !signatures[chainId] || !details) return []\r\n\r\n    return conducted[chainId]\r\n      .map(({ id, long, short }) => {\r\n        const quote = quotes[chainId][id]\r\n        const longSigs = signatures[chainId][long]\r\n        const shortSigs = signatures[chainId][short]\r\n        const asset = details[id]\r\n\r\n        if (!asset || !quote || !quote.long || !quote.short) {\r\n          return null\r\n        }\r\n\r\n        const fee = asset.sector === Sector.STOCKS ? stockFee : asset.sector === Sector.CRYPTO ? cryptoFee : forexFee\r\n\r\n        const longRegistrar: Registrar = {\r\n          id,\r\n          chainId,\r\n          ticker: asset.symbol,\r\n          name: asset.name,\r\n          sector: asset.sector,\r\n          direction: Direction.LONG,\r\n          contract: getAddress(long),\r\n          sibling: short,\r\n          symbol: asset.longSymbol,\r\n          price: quote.long.price,\r\n          fee: constructPercentage(fee),\r\n          open: !!longSigs,\r\n          token: new Token(chainId, getAddress(long), 18, asset.symbol, asset.name),\r\n        }\r\n\r\n        const shortRegistrar: Registrar = {\r\n          id,\r\n          chainId,\r\n          ticker: asset.symbol,\r\n          name: asset.name,\r\n          sector: asset.sector,\r\n          direction: Direction.SHORT,\r\n          contract: getAddress(short),\r\n          sibling: long,\r\n          symbol: asset.shortSymbol,\r\n          price: quote.short.price,\r\n          fee: constructPercentage(fee),\r\n          open: !!shortSigs,\r\n          token: new Token(chainId, getAddress(short), 18, asset.symbol, asset.name),\r\n        }\r\n\r\n        return {\r\n          id,\r\n          long: longRegistrar,\r\n          short: shortRegistrar,\r\n        }\r\n      })\r\n      .filter((o) => o) as RegistrarPair[]\r\n  }, [chainId, details, conducted, quotes, signatures, stockFee, cryptoFee, forexFee])\r\n}\r\n\r\n/**\r\n * A list of all conducted assets supported by DEUS, where longs/shorts are returned individually.\r\n * @param chainId chainId supported by the Synchronizer\r\n * @returns mapping of single Registrars\r\n */\r\nexport function useRegistrars(chainId: SupportedChainId): Registrar[] {\r\n  const registrars = useRegistrarPairs(chainId)\r\n  return useMemo(() => {\r\n    return registrars\r\n      .reduce((acc: Registrar[], pair: RegistrarPair) => {\r\n        acc.push(...[pair.long, pair.short])\r\n        return acc\r\n      }, [])\r\n      .sort(sortAlphabetically)\r\n  }, [registrars])\r\n}\r\n\r\n/**\r\n * Find a Registrar by its contract, ignores checksums\r\n * @param contract the registrarContract\r\n * @param chainId chainId supported by the Synchronizer\r\n * @returns found Registrar or undefined\r\n */\r\nexport function useRegistrarByContract(contract: string | undefined, chainId: SupportedChainId): Registrar | undefined {\r\n  const registrars = useRegistrars(chainId)\r\n  return useMemo(() => {\r\n    if (!contract) return undefined\r\n    const registrar: Registrar | undefined = find(\r\n      registrars,\r\n      (obj) => obj.contract.toUpperCase() === contract.toUpperCase()\r\n    )\r\n    return registrar ?? undefined\r\n  }, [contract, registrars])\r\n}\r\n\r\n/**\r\n * Return Registrars as instances of Sushiswap's Token standard\r\n * @param chainId chainId supported by the Synchronizer\r\n * @returns mapping of Tokens by their respective contracts\r\n */\r\nexport function useRegistrarTokenMap(chainId: SupportedChainId): TokenMap {\r\n  const registrars = useRegistrars(chainId)\r\n  return useMemo(\r\n    () =>\r\n      registrars.reduce((acc: TokenMap, registrar) => {\r\n        acc[registrar.contract] = registrar.token\r\n        return acc\r\n      }, {}),\r\n    [registrars]\r\n  )\r\n}\r\n\r\n/**\r\n * Return Registrars as instances of Sushiswap's Token standard\r\n * @param chainId chainId supported by the Synchronizer\r\n * @returns list of Tokens\r\n */\r\nexport function useRegistrarTokens(chainId: SupportedChainId): Token[] {\r\n  const registrars = useRegistrars(chainId)\r\n  return useMemo(() => registrars.map((registrar) => registrar.token), [registrars])\r\n}\r\n","import { AppState, useAppSelector } from '../store'\r\n\r\nimport { QuotesState } from './reducer'\r\n\r\nexport function useQuotesState(): QuotesState {\r\n  return useAppSelector((state: AppState) => state.quotes)\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport const updateForceRefresh = createAction<number>('application/updateForceRefresh')\r\n","import { useEffect } from 'react'\r\nimport { useAppDispatch, AppThunkDispatch } from '../store'\r\n\r\nimport { fetchConducted } from './reducer'\r\n\r\nexport default function Updater() {\r\n  const thunkDispatch: AppThunkDispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    thunkDispatch(fetchConducted())\r\n  }, [thunkDispatch])\r\n\r\n  return null\r\n}\r\n","import { useEffect } from 'react'\r\nimport { useAppDispatch, AppThunkDispatch } from '../store'\r\n\r\nimport { fetchDetails } from './reducer'\r\n\r\nexport default function Updater() {\r\n  const thunkDispatch: AppThunkDispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    thunkDispatch(fetchDetails())\r\n  }, [thunkDispatch])\r\n\r\n  return null\r\n}\r\n","import { JsonRpcProvider } from '@ethersproject/providers'\r\n\r\nimport { SupportedChainId } from './chains'\r\n\r\nexport const Providers: { [chainId: number]: JsonRpcProvider } = {\r\n  [SupportedChainId.FANTOM]: new JsonRpcProvider('https://rpc.ftm.tools'),\r\n}\r\n","import { useMemo } from 'react'\r\nimport { Contract } from '@ethersproject/contracts'\r\n\r\nimport { PartnerManager } from '../constants/addresses'\r\nimport PartnerManagerABI from '../constants/abi/PARTNER_MANAGER.json'\r\nimport { Providers } from '../constants/providers'\r\n\r\nexport function usePartnerManager(chainId: number) {\r\n  const address = useMemo(() => {\r\n    return chainId && chainId in PartnerManager ? PartnerManager[chainId] : PartnerManager[250]\r\n  }, [chainId])\r\n  return useContract(chainId, address, PartnerManagerABI)\r\n}\r\n\r\nfunction useContract(chainId: number, address: string, ABI: any) {\r\n  const provider = useProvider(chainId)\r\n  return useMemo(() => {\r\n    return new Contract(address, ABI, provider)\r\n  }, [address, ABI, provider])\r\n}\r\n\r\nfunction useProvider(chainId: number) {\r\n  return useMemo(() => {\r\n    return chainId && chainId in Providers ? Providers[chainId] : Providers[250]\r\n  }, [chainId])\r\n}\r\n","import { useEffect, useMemo, useState } from 'react'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { useAppDispatch } from '../store'\r\n\r\nimport { usePartnerManager } from '../../hooks'\r\nimport { updatePlatformFee, updatePartnerFee } from './reducer'\r\nimport { SynchronizerChains } from '../../constants/chains'\r\nimport { Sector } from '../../types'\r\n\r\nconst ZERO = BigNumber.from('0')\r\nconst ZERO_MAP = [ZERO, ZERO, ZERO]\r\n\r\nexport default function Updater({ chainId, partnerId }: { chainId: number; partnerId: string }): null {\r\n  const dispatch = useAppDispatch()\r\n  const PartnerManager = usePartnerManager(chainId)\r\n  const [partnerFees, setPartnerFees] = useState(ZERO_MAP)\r\n  const [platformFees, setPlatformFees] = useState(ZERO_MAP)\r\n\r\n  const isSupported: boolean = useMemo(\r\n    () => (chainId ? Object.values(SynchronizerChains).includes(chainId) : false),\r\n    [chainId]\r\n  )\r\n\r\n  const partnerArgs = useMemo(\r\n    () =>\r\n      !isSupported\r\n        ? []\r\n        : [\r\n            [partnerId, 0],\r\n            [partnerId, 1],\r\n            [partnerId, 2],\r\n          ],\r\n    [isSupported, partnerId]\r\n  )\r\n  const platformArgs = useMemo(() => (!isSupported ? [] : [0, 1, 2]), [isSupported])\r\n\r\n  useEffect(() => {\r\n    const fetchPartnerFees = async () => {\r\n      try {\r\n        const result = await Promise.all(\r\n          partnerArgs.map((args) => {\r\n            return PartnerManager.partnerFee(...args)\r\n          })\r\n        )\r\n        if (result.length) {\r\n          setPartnerFees(result)\r\n        }\r\n      } catch (err) {\r\n        console.error('Unable to fetch PartnerFees: ', err)\r\n        setPartnerFees(ZERO_MAP)\r\n      }\r\n    }\r\n    if (PartnerManager && partnerArgs.length) {\r\n      fetchPartnerFees()\r\n    }\r\n  }, [partnerArgs, PartnerManager])\r\n\r\n  useEffect(() => {\r\n    const fetchPlatformFees = async () => {\r\n      try {\r\n        const result = await Promise.all(\r\n          platformArgs.map((val) => {\r\n            return PartnerManager.platformFee(val)\r\n          })\r\n        )\r\n        if (result.length) {\r\n          setPlatformFees(result)\r\n        }\r\n      } catch (err) {\r\n        console.error('Unable to fetch PlatformFees: ', err)\r\n        setPartnerFees(ZERO_MAP)\r\n      }\r\n    }\r\n    if (PartnerManager && platformArgs.length) {\r\n      fetchPlatformFees()\r\n    }\r\n  }, [platformArgs, PartnerManager])\r\n\r\n  useEffect(() => {\r\n    const [partnerStocks, partnerCrypto, partnerForex] = partnerFees\r\n    const [platformStocks, platformCrypto, platformForex] = platformFees\r\n    // partner\r\n    if (partnerStocks) {\r\n      const fee = partnerStocks\r\n      dispatch(\r\n        updatePartnerFee({\r\n          [Sector.STOCKS]: fee.toString(),\r\n        })\r\n      )\r\n    }\r\n    if (partnerCrypto) {\r\n      const fee = partnerCrypto\r\n      dispatch(\r\n        updatePartnerFee({\r\n          [Sector.CRYPTO]: fee.toString(),\r\n        })\r\n      )\r\n    }\r\n    if (partnerForex) {\r\n      const fee = partnerForex\r\n      dispatch(\r\n        updatePartnerFee({\r\n          [Sector.FOREX]: fee.toString(),\r\n        })\r\n      )\r\n    }\r\n    // platform\r\n    if (platformStocks) {\r\n      const fee = platformStocks\r\n      dispatch(\r\n        updatePlatformFee({\r\n          [Sector.STOCKS]: fee.toString(),\r\n        })\r\n      )\r\n    }\r\n    if (platformCrypto) {\r\n      const fee = platformCrypto\r\n      dispatch(\r\n        updatePlatformFee({\r\n          [Sector.CRYPTO]: fee.toString(),\r\n        })\r\n      )\r\n    }\r\n    if (platformForex) {\r\n      const fee = platformForex\r\n      dispatch(\r\n        updatePlatformFee({\r\n          [Sector.FOREX]: fee.toString(),\r\n        })\r\n      )\r\n    }\r\n  }, [dispatch, platformFees, partnerFees])\r\n\r\n  return null\r\n}\r\n","import { useEffect } from 'react'\r\nimport { useAppDispatch, AppThunkDispatch } from '../store'\r\n\r\nimport { fetchQuotes } from './reducer'\r\nimport { useApplicationState } from '../application/reducer'\r\n\r\nexport default function Updater() {\r\n  const thunkDispatch: AppThunkDispatch = useAppDispatch()\r\n  const { forceRefresh } = useApplicationState()\r\n\r\n  useEffect(() => {\r\n    const loop = setInterval(() => thunkDispatch(fetchQuotes()), 60 * 1000)\r\n    thunkDispatch(fetchQuotes())\r\n    return () => clearInterval(loop)\r\n  }, [thunkDispatch])\r\n\r\n  // ignore initial effect\r\n  useEffect(() => {\r\n    if (forceRefresh) {\r\n      console.info('Forcing a quote refresh')\r\n      thunkDispatch(fetchQuotes())\r\n    }\r\n  }, [forceRefresh])\r\n\r\n  return null\r\n}\r\n","import { useEffect } from 'react'\r\nimport { useAppDispatch, AppThunkDispatch } from '../store'\r\n\r\nimport { fetchSignatures } from './reducer'\r\nimport { useApplicationState } from '../application/reducer'\r\n\r\nexport default function Updater() {\r\n  const thunkDispatch: AppThunkDispatch = useAppDispatch()\r\n  const { forceRefresh } = useApplicationState()\r\n\r\n  useEffect(() => {\r\n    thunkDispatch(fetchSignatures())\r\n  }, [thunkDispatch])\r\n\r\n  // ignore initial effect\r\n  useEffect(() => {\r\n    if (forceRefresh) {\r\n      console.info('Forcing a signatures refresh')\r\n      thunkDispatch(fetchSignatures())\r\n    }\r\n  }, [forceRefresh])\r\n\r\n  return null\r\n}\r\n","import React from 'react'\r\n\r\nimport { SupportedChainId } from '../constants/chains'\r\nimport ConductedUpdater from './conducted/updater'\r\nimport DetailsUpdater from './details/updater'\r\nimport FeesUpdater from './fees/updater'\r\nimport QuotesUpdater from './quotes/updater'\r\nimport SignaturesUpdater from './signatures/updater'\r\n\r\nexport interface UpdaterProps {\r\n  chainId: SupportedChainId\r\n  partnerId: string\r\n}\r\n\r\nexport default function Updaters({ chainId, partnerId }: UpdaterProps) {\r\n  return (\r\n    <>\r\n      <ConductedUpdater />\r\n      <DetailsUpdater />\r\n      <FeesUpdater chainId={chainId} partnerId={partnerId} />\r\n      <QuotesUpdater />\r\n      <SignaturesUpdater />\r\n    </>\r\n  )\r\n}\r\n","import { Collateral, Synchronizer, PartnerManager, Conductor, RoleChecker } from './constants/addresses'\r\n\r\nexport const addresses = {\r\n  Collateral,\r\n  Conductor,\r\n  PartnerManager,\r\n  RoleChecker,\r\n  Synchronizer,\r\n}\r\n\r\nexport { Percent, Token } from '@sushiswap/core-sdk'\r\nexport { SupportedChainId } from './constants/chains'\r\nexport { MuonClient, SignaturesData } from './muon'\r\n\r\nexport {\r\n  useRegistrars,\r\n  useRegistrarPairs,\r\n  useRegistrarByContract,\r\n  useRegistrarTokens,\r\n  useRegistrarTokenMap,\r\n} from './hooks/useRegistrars'\r\nexport { useTotalFeeCallback, usePlatformFeeCallback, usePartnerFeeCallback } from './hooks/useFees'\r\nexport { useForceRefreshCallback } from './hooks/useApplication'\r\n\r\nexport { RegistrarPair, Registrar, Direction, Sector } from './types/index'\r\nexport { Provider as SynchronizerProvider } from './provider'\r\n","import React from 'react'\r\nimport { Provider as ReduxProvider } from 'react-redux'\r\nimport { SupportedChainId } from './constants/chains'\r\nimport store from './state/store'\r\nimport Updaters from './state/updaters'\r\n\r\nexport function Provider({\r\n  chainId,\r\n  partnerId,\r\n  children,\r\n}: {\r\n  chainId: SupportedChainId\r\n  partnerId: string\r\n  children: React.ReactNode\r\n}) {\r\n  return (\r\n    <ReduxProvider store={store}>\r\n      <>\r\n        <Updaters chainId={chainId} partnerId={partnerId} />\r\n        {children}\r\n      </>\r\n    </ReduxProvider>\r\n  )\r\n}\r\n","import { useCallback } from 'react'\r\n\r\nimport { useAppDispatch } from '../state/store'\r\nimport { useApplicationState } from '../state/application/reducer'\r\nimport { updateForceRefresh } from '../state/application/actions'\r\n\r\nexport function useForceRefreshCallback() {\r\n  const { forceRefresh } = useApplicationState()\r\n  const dispatch = useAppDispatch()\r\n\r\n  return useCallback(() => {\r\n    dispatch(updateForceRefresh(forceRefresh + 1))\r\n  }, [dispatch, forceRefresh, updateForceRefresh])\r\n}\r\n"],"names":["SupportedChainId","SynchronizerChains","FANTOM","Collateral","Synchronizer","PartnerManager","Conductor","RoleChecker","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","INFO_BASE_URL","URL","ORACLE_NETWORK_NAMES","MUON_NETWORK_NAMES","isError","Direction","Sector","MuonClient","baseURL","nSign","_api","axios","timeout","_getChecksumAddress","contract","getAddress","_getRequestParams","action","chainId","tokenId","includes","chain","useMultiplier","_makeRequest","requestParams","url","data","app","_APP_ID","_APP_METHOD","params","response","status","getSignatures","message","console","success","confirmed","reqId","cid","_result$cid","substring","signature","signatures","_result$signatures$","owner","_result$signatures$2","nonce","_result$data","init","_result$data$init","nonceAddress","calldata","price","expireBlock","sigs","String","constructPercentage","Percent","JSBI","BigInt","PERCENT_DENOMINATOR","multiply","reducer","createSlice","initialState","forceRefresh","reducers","updateForceRefresh","payload","useApplicationState","useAppSelector","application","ConductedStatus","makeHttpRequest","options","cache","fetch","ok","json","statusText","DetailsStatus","LOADING","conducted","fetchConducted","createAsyncThunk","allSettled","entries","map","href","Number","tokens","reduce","acc","res","extraReducers","builder","addCase","pending","fulfilled","OK","rejected","log","ERROR","FeesStatus","details","fetchDetails","sector","STOCKS","CRYPTO","FOREX","symbol","shortSymbol","short_symbol","longSymbol","long_symbol","QuotesStatus","partnerFee","COMMODITIES","MISC","platformFee","feesSlice","updatePlatformFee","updatePartnerFee","actions","SignaturesStatus","quotes","fetchQuotes","longPrice","Long","_values$Long","shortPrice","Short","_values$Short","toFixed","open","fetchSignatures","store","configureStore","fees","middleware","getDefaultMiddleware","thunk","setupListeners","dispatch","useAppDispatch","useDispatch","useSelector","useFeesState","useTotalFeeCallback","useCallback","BigNumber","plus","div","sortAlphabetically","x","y","ticker","useRegistrarPairs","getFee","useMemo","toNumber","stockFee","cryptoFee","forexFee","id","long","short","quote","longSigs","shortSigs","asset","fee","direction","LONG","sibling","token","Token","SHORT","filter","o","useRegistrars","registrars","pair","sort","createAction","Updater","thunkDispatch","useEffect","Providers","JsonRpcProvider","usePartnerManager","address","ABI","provider","useProvider","Contract","useContract","PartnerManagerABI","ZERO","from","ZERO_MAP","partnerId","useState","partnerFees","setPartnerFees","platformFees","setPlatformFees","isSupported","partnerArgs","platformArgs","fetchPartnerFees","all","args","fetchPlatformFees","val","partnerStocks","partnerCrypto","partnerForex","platformStocks","platformCrypto","platformForex","toString","loop","setInterval","clearInterval","Updaters","React","ConductedUpdater","DetailsUpdater","FeesUpdater","QuotesUpdater","SignaturesUpdater","addresses","children","ReduxProvider","registrar","find","toUpperCase"],"mappings":"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"}